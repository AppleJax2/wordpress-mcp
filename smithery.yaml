name: ididi/wordpress-mcp
version: 1.0.0
description: WordPress and Divi Theme Builder MCP Server for website creation and management. Specializes in WordPress automation and Divi theme design.

# Protocol to communicate with the server
protocol: http # Use HTTP transport for remote scanning
mcp:
  protocolVersion: "1.0"  # Changed from "2023-07-01" to "1.0" for Smithery compatibility
  maxConnections: 5
  lazyLoadingEnabled: true

# Command to start the server for Smithery Hosted Deployment
startCommand:
  type: "http"
  configSchema:
    type: object
    properties:
      WP_SITE_URL:
        type: string
        description: URL of the WordPress site (e.g., https://example.com)
        default: https://visitingvet.com
      WP_USERNAME:
        type: string
        description: WordPress admin username
      WP_APP_PASSWORD:
        type: string
        description: WordPress application password
        format: password
      PORT:
        type: number
        description: Port for the local server
        default: 3001
      NODE_ENV:
        type: string
        description: Environment (development or production)
        enum: [development, production]
        default: production
      HEADLESS:
        type: boolean
        description: Run browser in headless mode
        default: true
      SLOWMO:
        type: number
        description: Slow motion delay for browser automation (ms)
        default: 0
      MAX_API_CONNECTIONS:
        type: number
        description: Maximum number of API connections
        default: 3
      MAX_BROWSER_CONNECTIONS:
        type: number
        description: Maximum number of browser connections
        default: 1
      DEBUG_MCP:
        type: boolean
        description: Enable debug logging for the MCP wrapper
        default: false
    required:
      - WP_SITE_URL
      - WP_USERNAME
      - WP_APP_PASSWORD
  commandFunction: |-
    (config) => ({
      command: "./start.sh",
      args: [],
      env: {
        PORT: "3001",
        MAX_API_CONNECTIONS: "3",
        MAX_BROWSER_CONNECTIONS: "1",
        CONNECTION_TIMEOUT: "10000",
        SMITHERY: "true",
        NODE_OPTIONS: "--max-old-space-size=512",
        WP_SITE_URL: config.WP_SITE_URL,
        WP_USERNAME: config.WP_USERNAME,
        WP_APP_PASSWORD: config.WP_APP_PASSWORD,
        NODE_ENV: config.NODE_ENV || "production",
        HEADLESS: config.HEADLESS ? "true" : "false",
        SLOWMO: String(config.SLOWMO || 0),
        DEBUG_MCP: config.DEBUG_MCP ? "true" : "false"
      }
    })

# Use custom Dockerfile for Smithery deployment
dockerfile: Dockerfile.smithery

# Resource requirements for the server
resources:
  memory: medium # Changed from low to medium to ensure enough memory for Chromium
  cpu: medium # Changed from low to medium to avoid timeout issues

# Tool categories for organization
toolCategories:
  - name: WordPress Core
    description: Basic WordPress site management tools
    tools: ["wordpress_site_info", "wordpress_create_page", "wordpress_auth_manager", "wordpress_content_manager"]
  - name: Divi Builder
    description: Tools for designing and building websites with Divi theme
    tools: ["wordpress_divi_builder", "wordpress_theme_customizer", "wordpress_theme_manager"]
  - name: Site Structure
    description: Tools for managing WordPress site structure and navigation
    tools: ["wordpress_menu_manager", "wordpress_widget_manager", "wordpress_media_manager"]

# Health check configuration to ensure the service is running properly
healthCheck:
  type: http
  path: /
  interval: 30
  timeout: 10
  retries: 3
  startPeriod: 30